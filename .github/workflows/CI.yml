name: Matrix CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  workflow_call:

env:
  CACHE_FOLDER: '.cache'
  BUILD_FOLDER: 'build/Release'
  DIST_DIR: 'build/Release/dist'

jobs:
  Format:
    uses: ./.github/workflows/FormatCheck.yml

  build:
    needs: Format
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: 'Windows',
              artifact: 'Windows',
              os: windows-2022,
              boost-platform-version: 2022,
              boost-toolset: msvc,
            }
          - {
              name: 'Ubuntu',
              artifact: 'Linux',
              os: ubuntu-22.04,
              boost-platform-version: 20.04,
              boost-toolset: gcc,
            }
          - {
              name: 'macOS',
              artifact: 'macOS',
              os: macos-12,
              boost-platform-version: 11,
              boost-toolset: clang,
            }
    timeout-minutes: 60
    steps:
      - name: Prepare Ubuntu
        if: matrix.config.name == 'Ubuntu'
        run: |
          additionalPackages=(
            libegl-dev
            libdrm-dev
            libgbm-dev
            wayland-protocols
            libwayland-dev
            libxkbcommon-dev
            libxrandr-dev
            libxinerama-dev
            libxcursor-dev
            libxi-dev
            libx11-xcb-dev
            libasound2-dev
            libjack-jackd2-dev
            libpipewire-0.3-dev
            libpulse-dev
            libsndio-dev
            libdecor-0-dev
          )
          sudo apt-get install -y ${additionalPackages[@]}

      - uses: actions/checkout@v3
        name: Checkout

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.4
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.83.0
          platform_version: ${{ matrix.config.boost-platform-version }}
          toolset: ${{ matrix.config.boost-toolset }}
          link: static

      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: abe01a20d3652f9443eed96bc7ec888d5d194674

      - uses: actions/cache@v3
        name: 'Use Cache: .cache'
        id: cache-folder
        with:
          path: ${{env.CACHE_FOLDER}}
          key: ${{ matrix.config.name }}.cache
          restore-keys: ${{ matrix.config.name }}.cache
      - uses: actions/cache@v3
        name: 'Use Cache: build'
        id: build-folder
        with:
          path: ${{env.BUILD_FOLDER}}
          key: ${{ matrix.config.name }}.build.cache
          restore-keys: ${{ matrix.config.name }}.build.cache

      - name: Build Target
        uses: lukka/run-cmake@v10
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        with:
          configurePreset: 'Release'
          buildPreset: 'Release'
          buildPresetAdditionalArgs: "['--target HelloTriangle']"

      - name: Prepare Artifacts
        run: |
          tar -cvf ${{ matrix.config.artifact }}.tar -C ${{ env.DIST_DIR }} .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.artifact }}
          path: ${{ matrix.config.artifact }}.tar
